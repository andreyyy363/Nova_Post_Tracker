import React from 'react';
import { View, Text, StyleSheet, TouchableOpacity } from 'react-native';
import StatusBadge from './StatusBadge';
import { TrackingData } from '../../types/tracking';
import { samplePackage } from '../../constants/sampleData';

interface PackageCardProps {
  data: TrackingData;
  isDemo: boolean;
  showFullInfo: boolean;
  hasEnteredPhone: boolean;
  onFullInfoClick: () => void;
  onPhoneModalShow: () => void;
}

const PackageCard: React.FC<PackageCardProps> = ({ 
  data, 
  isDemo, 
  showFullInfo, 
  hasEnteredPhone, 
  onFullInfoClick,
  onPhoneModalShow
}) => {
  const getValueOrDefault = (value: any, defaultValue: string): string => {
    if (value === undefined || value === null) return defaultValue;
    if (typeof value === 'string') {
      return value.trim() !== '' ? value : defaultValue;
    }
    return String(value) || defaultValue;
  };

  const getSenderInfo = (response: TrackingData): string => {
    if (isDemo) return samplePackage.sender;
  
    const items = response.Items || [];
  
    if (!Array.isArray(items) || items.length === 0) {
      return '–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ ‚Ä¢ –î–∞–Ω—ñ –≤—ñ–¥—Å—É—Ç–Ω—ñ';
    }
  
    const senderList: string[] = [];
  
    for (const item of items) {
      if (item.StatusCode === "3") continue;
  
      const {
        Sender,
        SenderFullNameEW,
        CounterpartySenderDescription,
        CounterpartySenderType
      } = item;
  
      if (
        CounterpartySenderDescription &&
        CounterpartySenderDescription !== "–ü—Ä–∏–≤–∞—Ç–Ω–∞ –æ—Å–æ–±–∞"
      ) {
        if (
          CounterpartySenderType === "Organization" &&
          SenderFullNameEW &&
          SenderFullNameEW.trim() !== ''
        ) {
          senderList.push(`${CounterpartySenderDescription} (–∫–æ–Ω—Ç–∞–∫—Ç–Ω–∞ –æ—Å–æ–±–∞: ${SenderFullNameEW.trim()})`);
        } else {
          senderList.push(CounterpartySenderDescription);
        }
      } else if (SenderFullNameEW && SenderFullNameEW.trim() !== '') {
        senderList.push(SenderFullNameEW.trim());
      } else if (Sender && Sender.trim() !== '') {
        senderList.push(Sender.trim());
      }
    }
  
    if (senderList.length === 0) {
      return '–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–∏—Ö–æ–≤–∞–Ω–∞ ‚Ä¢ –î–ª—è –ø–æ–≤–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –≤—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è';
    }
  
    const uniqueSenders = [...new Set(senderList)];
    return uniqueSenders.join(', ');
  };
  
  return (
    <View style={styles.packageCard}>
      <View style={styles.packageHeader}>
        <View>
          <Text style={styles.packageNumber}>‚Ññ {data.Number}</Text>
          <StatusBadge statusCode={data.StatusCode} />
        </View>
        <View style={styles.packageIconPlaceholder}>
          <Text style={styles.packageIconText}>üì¶</Text>
        </View>
      </View>
      
      <View style={styles.packageDetails}>
        {/* –û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è - 3 –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª—è */}
        <View style={styles.detailRow}>
          <Text style={styles.detailLabel}>–ó–≤—ñ–¥–∫–∏:</Text>
          <Text style={styles.detailValue}>
            {getValueOrDefault(data.WarehouseSenderAddress, samplePackage.from)}
          </Text>
        </View>
        <View style={styles.detailRow}>
          <Text style={styles.detailLabel}>–ö—É–¥–∏:</Text>
          <Text style={styles.detailValue}>
            {getValueOrDefault(data.WarehouseRecipientAddress, samplePackage.to)}
          </Text>
        </View>
        <View style={styles.detailRow}>
          <Text style={styles.detailLabel}>–û—á—ñ–∫—É–≤–∞–Ω–∞ –¥–æ—Å—Ç–∞–≤–∫–∞:</Text>
          <Text style={styles.detailValue}>
            {getValueOrDefault(data.ScheduledDeliveryDate, samplePackage.estimatedDelivery)}
          </Text>
        </View>
        
        {/* –ö–Ω–æ–ø–∫–∞ "–ü–æ–ª–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è" */}
        <TouchableOpacity 
          style={styles.fullInfoButton}
          onPress={onFullInfoClick}
        >
          <Text style={styles.fullInfoButtonText}>
            {showFullInfo ? '–°—Ö–æ–≤–∞—Ç–∏ –¥–µ—Ç–∞–ª—ñ' : '–ü–æ–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è'}
          </Text>
        </TouchableOpacity>
        
        {/* –ü–æ–ª–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        {showFullInfo && (
          <>
            {/* –°—Ç–≤–æ—Ä–µ–Ω–æ —Ç–µ–ø–µ—Ä—å –≤ –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ */}
            <View style={styles.detailRow}>
              <Text style={styles.detailLabel}>–°—Ç–≤–æ—Ä–µ–Ω–æ:</Text>
              <Text style={styles.detailValue}>
                {isDemo 
                  ? samplePackage.created 
                  : getValueOrDefault(
                      data.CreatedAt || 
                      data.DateCreated || 
                      (data as any).CreateTime,
                      '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'
                    )}
              </Text>
            </View>
            
            {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤–≤–µ–¥–µ–Ω –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–ª–∏ —ç—Ç–æ –¥–µ–º–æ */}
            {(hasEnteredPhone || isDemo) && (
              <>
                <View style={styles.detailRow}>
                  <Text style={styles.detailLabel}>–í—ñ–¥–ø—Ä–∞–≤–Ω–∏–∫:</Text>
                  <Text style={styles.detailValue}>
                    {getSenderInfo(data)}
                  </Text>
                </View>
                
                {/* –ü–æ–ª—É—á–∞—Ç–µ–ª—å */}
                <View style={styles.detailRow}>
                  <Text style={styles.detailLabel}>–û—Ç—Ä–∏–º—É–≤–∞—á:</Text>
                  <Text style={styles.detailValue}>
                    {isDemo 
                      ? samplePackage.recipient 
                      : getValueOrDefault(
                          data.RecipientFullName || 
                          data.Recipient ||
                          (data as any).RecipientName,
                          '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'
                        )}
                  </Text>
                </View>
                
                {/* –í–µ—Å, —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏ –æ–ø–∏—Å–∞–Ω–∏–µ */}
                <View style={styles.detailRow}>
                  <Text style={styles.detailLabel}>–í–∞–≥–∞:</Text>
                  <Text style={styles.detailValue}>
                    {isDemo 
                      ? samplePackage.weight 
                      : getValueOrDefault(
                          data.DocumentWeight || 
                          data.Weight, 
                          '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'
                        )}
                  </Text>
                </View>
                <View style={styles.detailRow}>
                  <Text style={styles.detailLabel}>–û–≥–æ–ª–æ—à–µ–Ω–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å:</Text>
                  <Text style={styles.detailValue}>
                    {isDemo 
                      ? samplePackage.price 
                      : getValueOrDefault(
                          data.DocumentCost || 
                          data.Cost || 
                          data.AnnouncedPrice,
                          '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'
                        )}
                  </Text>
                </View>
                <View style={styles.detailRow}>
                  <Text style={styles.detailLabel}>–û–ø–∏—Å:</Text>
                  <Text style={styles.detailValue}>
                    {isDemo 
                      ? samplePackage.description 
                      : getValueOrDefault(
                          data.CargoDescription || 
                          (data as any).CargoDescriptionString, 
                          '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'
                        )}
                  </Text>
                </View>
              </>
            )}
            
            {/* –°–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –≤–≤–æ–¥–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ */}
            {!hasEnteredPhone && !isDemo && (
              <TouchableOpacity 
                style={styles.phonePromptButton}
                onPress={onPhoneModalShow}
              >
                <Text style={styles.phonePromptText}>
                  –í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ–≤–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó
                </Text>
              </TouchableOpacity>
            )}
          </>
        )}
      </View>
    </View>
  );
};

const styles = StyleSheet.create({
  packageCard: {
    backgroundColor: 'white',
    borderRadius: 12,
    overflow: 'hidden',
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.25,
    shadowRadius: 3.84,
    elevation: 5,
  },
  packageHeader: {
    backgroundColor: '#f8f8f8',
    padding: 16,
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    borderBottomWidth: 1,
    borderBottomColor: '#eee',
  },
  packageNumber: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#333',
    marginBottom: 8,
  },
  packageDetails: {
    padding: 16,
  },
  detailRow: {
    flexDirection: 'row',
    marginBottom: 8,
    paddingBottom: 8,
    borderBottomWidth: 1,
    borderBottomColor: '#f0f0f0',
  },
  detailLabel: {
    flex: 0.4,
    fontSize: 14,
    color: '#666',
  },
  detailValue: {
    flex: 0.6,
    fontSize: 14,
    color: '#333',
    fontWeight: '500',
  },
  packageIconPlaceholder: {
    width: 50,
    height: 50,
    backgroundColor: '#FF6B08',
    borderRadius: 25,
    justifyContent: 'center',
    alignItems: 'center',
  },
  packageIconText: {
    fontSize: 24,
    color: 'white',
  },
  fullInfoButton: {
    backgroundColor: '#FF6B08',
    padding: 12,
    borderRadius: 8,
    marginTop: 16,
    alignItems: 'center',
  },
  fullInfoButtonText: {
    color: 'white',
    fontWeight: 'bold',
    fontSize: 16,
  },
  phonePromptButton: {
    backgroundColor: '#f0f0f0',
    padding: 16,
    borderRadius: 8,
    marginTop: 16,
    alignItems: 'center',
  },
  phonePromptText: {
    color: '#666',
    fontSize: 14,
    textAlign: 'center',
  },
});

export default PackageCard;